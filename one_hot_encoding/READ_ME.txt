########## PURPOSE ##########

The purpose of this directory is to convert human sequences into one-hot encoded matrices.
This will be used as input into the encoder.

########## HOW IT WORKS ##########

It first requires a directory of FASTA files. 
Each file is associated with a human gene (for example, ENSG00000000419). 
Within the file is the promoter sequence 700 bp upstream the start site of the coding sequence.

For example, the file for the human gene ENSG00000000419 contains these sequences (3 as an example):

>Homo_sapiens::chr20:5095853250959232
GAGCCAGATGCCGGAAGCGGAATTACGTAATGTGGCGCGGAAAAGGACGGGTCGGACCGTACCAAATTCGGAAGCGGGGGATGACCTGTGTGATTGATCGCTAGTTCTTCTAGGGCCATTGCGTGGTTCAATTAGAAATATTCTGGATTTATACATCTTTGAAGTTTAATCTGAAGGTTTCTTCAGGAAGTAAATATCTATTCATCACCTTTTCCCAAGCTCCATAAAGTTTTTTAGTTTATCCCAGTCGCTAGGAGACAGAAGACGGAAGCGGAAATGCCTTTCACGACAACTTCCGGAAGAGGTCGCCATGGCTTCCCGGGAGGAGGTACTCGCCTTACAAGCTGAAGTTGCCCAACGTGAGGAGGAATTGAATTCGCTGAAGCAGAAGCTGGCGTCGGCTCTTTTGGCTGAGCAGGAACCGCAGCCAGAACGGCTGGTTCCGGTGTCGCCGCTGCCGCCGAAGGCCGCTCTGTCCCGAGATGAGATTCTGCGCTATAGCCGGCAGCTAGTGCTGCCCGAGCTGGGCGTGCACGGACAGCTGCGCCTGGGGACCGCGTGCGTGCTAATCGTGGGCTGCGGTGGGCTCGGCTGTCCACTAGCGCAGTACTTGGCAGCGGCCGGCGTGGGCCGCCTTGGCCTTGTGGACTATGACGTGGTAGAGATGAGCAACCTGGCCCGCCAAGTGCTGCATGGCGAG
>Micronycteris_hirsuta::MicHir_scaffold_138820:13832083
GCCAGTGAGCACGTTGTCCGAGCAGTGGGCCACCAGGTCCTAGGGGCAGACCAGGTCCAGAGCTGTGGCTGGCGTAGGGAAGCAGTCCAGGCAAAGGCTCGGGGCGGGGGCAGGGGAGTGGCAGTGGGAAGGCCTTACCATGTGGCCTGGGCCAGGCTGCTCATCTTTGCTCAATTGGTAGTCGTCGGGCCAGGGTGGTCCACGCAGGGAGTTACAGGACTGCTCCAGCGCGTAGCTCAACTCGCCCATGGCAGCCCGTGTGGAACTGTGCGGTCTCCAGGCAGACGTCCGGCCCGCCCGGCGCAGGGCGCCGGAGCTGTTGGCCCAGCGCAGTCCCAATTCAGAGGCTTTTCTGGGCAGTGGCAACGCCTGGGAGCTGATGCTGTGGCTGTGTTTGGCTTCGTGCCTCATCGTCGGCTCTACCGAAGGGGCCGCCACCAGCCTGTGCTTCAGGGAATCCTGCTCCTTCTCGGGCTGGGCGATTTTAGTGCGCAAGGTGAGCGCCTCCTCCCTGGCAGCCACGACTGCTTCTTAAGCAAGTTGTTAATACAAGGCAGGGGCTAAGGCACCAACCCCTCCATCTGCAGCGATGGAAGATCGGGGGGTGACTTTAGATTTCCCTGAGCTTAACACAGTCCTCCCTCGGTAGCCACAGGGGATTGGTTCCAGGACCCTGCAGGATACTAAATTCCGTGGACTT
>Spilogale_gracilis::SpiGra_flattened_line_20690:7097071670
TCTGGGCAGCACCTACGTGTCAATAACCAGATCACAAGTGAGCACTCCGTCGGCAGGTCCTAGAGACCAGTAGGTCTGCAGCGGCCTTGGTGTCGGGGCCTGCGCGCGGGGTATGCACTCCACGCCGACGTAACCCGGGGGCCGAAAAGGCCTCACCCTGCAGCCCTCAGCCGGGCGGTTGCTTCCCTCTATCAACTGCTACGGCCAGGCCCTCGCCAAGTTGCCAGAACTGTGCCTGCGGGTGGCCCCGCTCACCTCTGCGCACTACCCACGTGGCGCTCGCAGGCGTGCACATGCGCACAAGCCCAGCGCGGACAGCGCTTGCTGGGGCCCGAGCTCAGTCTTAGAGGAAGGCCTTCCCCAGAGGCCACAACACCGGAAGCGGATGGCTCCGGGGTTGGCTCCGCCTCCAGCTTGGGCTGCCGCTGTTTTAAAAGAAGGTTCAGGAACCTCTGTGTCAGGGGTTTCAGTCTCTCTTGGTGTGCCGGCCGGCTTCGCAAGGTGAGTACCTCCTCCGTGGCAACAAGGACTGTCTTTTCTGGAAGCTGCCAATGCATTCTTTTTTTTTAAAAAAGTAAGCAAGTGAACTAAAATGCTACTACCGCATTGCATCACTTTGTAGAGTTAGACTAACGTGACCTTGAAAACTAGCAAAAGGCTTGACAAAGCAAGAGTGCATTAAGCCGTACATACGTATTTT

Then, run the python file.

The output will be each gene file, but turned into .npz files.

After running this, move the .npz files into a new directory for the model.

########## MORE INFO ##########

THE ORDER IS A, C, G, T!

You don't have to run this to recreate the data in my thesis, because they've already been converted.
This is only to generate .npz files for new data.

The dimension of the DNA sequence has been expanded by 1 dimension for loading into the encoder.

The .npz file format can be accessed like so:

x = np.load(file, encoding = "bytes")

Sometimes this doesn't work. If it doesn't, you might need to change the encoding (see documentation).
Or, rerun the python file, or redownload your data then rerun it...it should almost always work though.

This object, x, can be looped like a dictionary, where the keys are the systematic ID for the species
and the values are numpy arrays which contain the one-hot encoded DNA sequence.

You can loop though this object like so:

for key, value in x.items():
	k = key # this is the species systematic name
	v = value # this is the one-hot encoded DNA sequence as a numpy array
